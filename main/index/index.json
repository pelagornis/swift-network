{"includedArchiveIdentifiers":["Network"],"interfaceLanguages":{"swift":[{"children":[{"title":"Articles","type":"groupMarker"},{"path":"\/documentation\/network\/basicusage","title":"Basic Usage","type":"article"},{"children":[{"title":"Essentials","type":"groupMarker"},{"path":"\/documentation\/network\/gettingstarted","title":"Getting Started","type":"article"},{"path":"\/documentation\/network\/basicusage","title":"Basic Usage","type":"article"},{"title":"Core Features","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/network\/networkprovider\/init(session:plugins:responsehandler:stubenabled:retrypolicy:metricscollector:securitymanager:ratelimiter:circuitbreaker:cachemanager:)","title":"init(session: any Session, plugins: [any NetworkPlugin], responseHandler: any ResponseHandler, stubEnabled: Bool, retryPolicy: (any RetryPolicy)?, metricsCollector: (any NetworkMetricsCollector)?, securityManager: (any SecurityManager)?, rateLimiter: (any RateLimiter)?, circuitBreaker: (any CircuitBreaker)?, cacheManager: (any CacheManager)?)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/network\/networkprovider\/addcertificatepinning(_:for:)","title":"func addCertificatePinning(SecCertificate, for: String)","type":"method"},{"path":"\/documentation\/network\/networkprovider\/clearcache()","title":"func clearCache()","type":"method"},{"path":"\/documentation\/network\/networkprovider\/getcircuitbreakerstate()","title":"func getCircuitBreakerState() -> CircuitBreakerState?","type":"method"},{"path":"\/documentation\/network\/networkprovider\/getmetrics()","title":"func getMetrics() -> NetworkMetrics?","type":"method"},{"path":"\/documentation\/network\/networkprovider\/request(_:as:)","title":"func request<T>(E, as: T.Type) async throws -> T","type":"method"},{"path":"\/documentation\/network\/networkprovider\/request(_:as:modifiers:)","title":"func request<T>(E, as: T.Type, modifiers: [any RequestModifier]) async throws -> T","type":"method"},{"path":"\/documentation\/network\/networkprovider\/resetcircuitbreaker()","title":"func resetCircuitBreaker()","type":"method"},{"path":"\/documentation\/network\/networkprovider\/resetmetrics()","title":"func resetMetrics()","type":"method"}],"path":"\/documentation\/network\/networkprovider","title":"NetworkProvider","type":"class"}],"path":"\/documentation\/network\/documentation","title":"`Network`","type":"symbol"},{"path":"\/documentation\/network\/gettingstarted","title":"Getting Started","type":"article"},{"title":"Classes","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/network\/cachepolicymodifier\/init(cachepolicy:)","title":"init(cachePolicy: URLRequest.CachePolicy)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/network\/cachepolicymodifier\/modify(_:)","title":"func modify(BuiltRequest) throws -> BuiltRequest","type":"method"}],"path":"\/documentation\/network\/cachepolicymodifier","title":"CachePolicyModifier","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/network\/certificatepinningplugin\/init(securitymanager:)","title":"init(securityManager: any SecurityManager)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/network\/certificatepinningplugin\/didreceive(_:target:)","title":"func didReceive(Result<(Data, URLResponse), any Error>, target: any Endpoint)","type":"method"},{"path":"\/documentation\/network\/certificatepinningplugin\/willsend(_:target:)","title":"func willSend(URLRequest, target: any Endpoint)","type":"method"}],"path":"\/documentation\/network\/certificatepinningplugin","title":"CertificatePinningPlugin","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/network\/circuitbreakerplugin\/init(circuitbreakers:)","title":"init(circuitBreakers: [String : any CircuitBreaker])","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/network\/circuitbreakerplugin\/didreceive(_:target:)","title":"func didReceive(Result<(Data, URLResponse), any Error>, target: any Endpoint)","type":"method"},{"path":"\/documentation\/network\/circuitbreakerplugin\/willsend(_:target:)","title":"func willSend(URLRequest, target: any Endpoint)","type":"method"}],"path":"\/documentation\/network\/circuitbreakerplugin","title":"CircuitBreakerPlugin","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/network\/consolelogger\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/network\/consolelogger\/log(_:level:)","title":"func log(String, level: LogLevel)","type":"method"}],"path":"\/documentation\/network\/consolelogger","title":"ConsoleLogger","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/network\/defaultcircuitbreaker\/init(config:)","title":"init(config: CircuitBreakerConfig)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/network\/defaultcircuitbreaker\/getstate()","title":"func getState() -> CircuitBreakerState","type":"method"},{"path":"\/documentation\/network\/defaultcircuitbreaker\/recordfailure(_:)","title":"func recordFailure(any Error)","type":"method"},{"path":"\/documentation\/network\/defaultcircuitbreaker\/recordsuccess()","title":"func recordSuccess()","type":"method"},{"path":"\/documentation\/network\/defaultcircuitbreaker\/reset()","title":"func reset()","type":"method"},{"path":"\/documentation\/network\/defaultcircuitbreaker\/shouldallowrequest()","title":"func shouldAllowRequest() -> Bool","type":"method"}],"path":"\/documentation\/network\/defaultcircuitbreaker","title":"DefaultCircuitBreaker","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/network\/defaultmetricscollector\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/network\/defaultmetricscollector\/getmetrics()","title":"func getMetrics() -> NetworkMetrics","type":"method"},{"path":"\/documentation\/network\/defaultmetricscollector\/recordcachehit(for:)","title":"func recordCacheHit(for: String)","type":"method"},{"path":"\/documentation\/network\/defaultmetricscollector\/recordcachemiss(for:)","title":"func recordCacheMiss(for: String)","type":"method"},{"path":"\/documentation\/network\/defaultmetricscollector\/recordrequest(_:starttime:)","title":"func recordRequest(URLRequest, startTime: Date)","type":"method"},{"path":"\/documentation\/network\/defaultmetricscollector\/recordresponse(_:endtime:error:)","title":"func recordResponse(URLResponse, endTime: Date, error: (any Error)?)","type":"method"},{"path":"\/documentation\/network\/defaultmetricscollector\/recordretry(attempt:error:)","title":"func recordRetry(attempt: Int, error: any Error)","type":"method"},{"path":"\/documentation\/network\/defaultmetricscollector\/reset()","title":"func reset()","type":"method"}],"path":"\/documentation\/network\/defaultmetricscollector","title":"DefaultMetricsCollector","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/network\/defaultsecuritymanager\/init(allowinvalidcertificates:validatedomainname:)","title":"init(allowInvalidCertificates: Bool, validateDomainName: Bool)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/network\/defaultsecuritymanager\/addcertificatepinning(_:for:)","title":"func addCertificatePinning(SecCertificate, for: String)","type":"method"},{"path":"\/documentation\/network\/defaultsecuritymanager\/iscertificatepinned(for:)","title":"func isCertificatePinned(for: String) -> Bool","type":"method"},{"path":"\/documentation\/network\/defaultsecuritymanager\/removecertificatepinning(for:)","title":"func removeCertificatePinning(for: String)","type":"method"},{"path":"\/documentation\/network\/defaultsecuritymanager\/validatecertificate(_:domain:)","title":"func validateCertificate(SecTrust, domain: String) -> Bool","type":"method"}],"path":"\/documentation\/network\/defaultsecuritymanager","title":"DefaultSecurityManager","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/network\/endpointcircuitbreaker\/init(endpoint:config:)","title":"init(endpoint: any Endpoint, config: CircuitBreakerConfig)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/network\/endpointcircuitbreaker\/getstate()","title":"func getState() -> CircuitBreakerState","type":"method"},{"path":"\/documentation\/network\/endpointcircuitbreaker\/recordfailure(_:)","title":"func recordFailure(any Error)","type":"method"},{"path":"\/documentation\/network\/endpointcircuitbreaker\/recordsuccess()","title":"func recordSuccess()","type":"method"},{"path":"\/documentation\/network\/endpointcircuitbreaker\/reset()","title":"func reset()","type":"method"},{"path":"\/documentation\/network\/endpointcircuitbreaker\/shouldallowrequest()","title":"func shouldAllowRequest() -> Bool","type":"method"}],"path":"\/documentation\/network\/endpointcircuitbreaker","title":"EndpointCircuitBreaker","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/network\/endpointspecificratelimiter\/init(defaultconfig:endpointconfigs:)","title":"init(defaultConfig: RateLimitConfig, endpointConfigs: [String : RateLimitConfig])","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/network\/endpointspecificratelimiter\/recordrequest(for:)","title":"func recordRequest(for: any Endpoint)","type":"method"},{"path":"\/documentation\/network\/endpointspecificratelimiter\/reset()","title":"func reset()","type":"method"},{"path":"\/documentation\/network\/endpointspecificratelimiter\/shouldallowrequest(for:)","title":"func shouldAllowRequest(for: any Endpoint) -> Bool","type":"method"}],"path":"\/documentation\/network\/endpointspecificratelimiter","title":"EndpointSpecificRateLimiter","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/network\/headermodifier\/init(headers:)","title":"init(headers: [String : String])","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/network\/headermodifier\/modify(_:)","title":"func modify(BuiltRequest) throws -> BuiltRequest","type":"method"}],"path":"\/documentation\/network\/headermodifier","title":"HeaderModifier","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/network\/loggingplugin\/init(logger:loglevel:)","title":"init(logger: any NetworkLogger, logLevel: LogLevel)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/network\/loggingplugin\/didreceive(_:target:)","title":"func didReceive(Result<(Data, URLResponse), any Error>, target: any Endpoint)","type":"method"},{"path":"\/documentation\/network\/loggingplugin\/willsend(_:target:)","title":"func willSend(URLRequest, target: any Endpoint)","type":"method"}],"path":"\/documentation\/network\/loggingplugin","title":"LoggingPlugin","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/network\/memorycachemanager\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/network\/memorycachemanager\/clear()","title":"func clear()","type":"method"},{"path":"\/documentation\/network\/memorycachemanager\/get(for:as:)","title":"func get<T>(for: String, as: T.Type) -> T?","type":"method"},{"path":"\/documentation\/network\/memorycachemanager\/remove(for:)","title":"func remove(for: String)","type":"method"},{"path":"\/documentation\/network\/memorycachemanager\/set(_:for:expiration:)","title":"func set<T>(T, for: String, expiration: TimeInterval?)","type":"method"}],"path":"\/documentation\/network\/memorycachemanager","title":"MemoryCacheManager","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/network\/networkprovider\/init(session:plugins:responsehandler:stubenabled:retrypolicy:metricscollector:securitymanager:ratelimiter:circuitbreaker:cachemanager:)","title":"init(session: any Session, plugins: [any NetworkPlugin], responseHandler: any ResponseHandler, stubEnabled: Bool, retryPolicy: (any RetryPolicy)?, metricsCollector: (any NetworkMetricsCollector)?, securityManager: (any SecurityManager)?, rateLimiter: (any RateLimiter)?, circuitBreaker: (any CircuitBreaker)?, cacheManager: (any CacheManager)?)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/network\/networkprovider\/addcertificatepinning(_:for:)","title":"func addCertificatePinning(SecCertificate, for: String)","type":"method"},{"path":"\/documentation\/network\/networkprovider\/clearcache()","title":"func clearCache()","type":"method"},{"path":"\/documentation\/network\/networkprovider\/getcircuitbreakerstate()","title":"func getCircuitBreakerState() -> CircuitBreakerState?","type":"method"},{"path":"\/documentation\/network\/networkprovider\/getmetrics()","title":"func getMetrics() -> NetworkMetrics?","type":"method"},{"path":"\/documentation\/network\/networkprovider\/request(_:as:)","title":"func request<T>(E, as: T.Type) async throws -> T","type":"method"},{"path":"\/documentation\/network\/networkprovider\/request(_:as:modifiers:)","title":"func request<T>(E, as: T.Type, modifiers: [any RequestModifier]) async throws -> T","type":"method"},{"path":"\/documentation\/network\/networkprovider\/resetcircuitbreaker()","title":"func resetCircuitBreaker()","type":"method"},{"path":"\/documentation\/network\/networkprovider\/resetmetrics()","title":"func resetMetrics()","type":"method"}],"path":"\/documentation\/network\/networkprovider","title":"NetworkProvider","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/network\/networkrequestbuilder\/init(endpoint:)","title":"init(endpoint: any Endpoint)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/network\/networkrequestbuilder\/addheader(field:value:)","title":"func addHeader(field: String, value: String) -> Self","type":"method"},{"path":"\/documentation\/network\/networkrequestbuilder\/addheaders(_:)","title":"func addHeaders([String : String]) -> Self","type":"method"},{"path":"\/documentation\/network\/networkrequestbuilder\/addmodifier(_:)","title":"func addModifier(any RequestModifier) -> Self","type":"method"},{"path":"\/documentation\/network\/networkrequestbuilder\/build()","title":"func build() throws -> BuiltRequest","type":"method"},{"path":"\/documentation\/network\/networkrequestbuilder\/setcachepolicy(_:)","title":"func setCachePolicy(URLRequest.CachePolicy) -> Self","type":"method"},{"path":"\/documentation\/network\/networkrequestbuilder\/settimeout(_:)","title":"func setTimeout(TimeInterval) -> Self","type":"method"}],"path":"\/documentation\/network\/networkrequestbuilder","title":"NetworkRequestBuilder","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/network\/ratelimitingplugin\/init(ratelimiter:)","title":"init(rateLimiter: any RateLimiter)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/network\/ratelimitingplugin\/didreceive(_:target:)","title":"func didReceive(Result<(Data, URLResponse), any Error>, target: any Endpoint)","type":"method"},{"path":"\/documentation\/network\/ratelimitingplugin\/willsend(_:target:)","title":"func willSend(URLRequest, target: any Endpoint)","type":"method"}],"path":"\/documentation\/network\/ratelimitingplugin","title":"RateLimitingPlugin","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/network\/slidingwindowratelimiter\/init(config:)","title":"init(config: RateLimitConfig)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/network\/slidingwindowratelimiter\/recordrequest(for:)","title":"func recordRequest(for: any Endpoint)","type":"method"},{"path":"\/documentation\/network\/slidingwindowratelimiter\/reset()","title":"func reset()","type":"method"},{"path":"\/documentation\/network\/slidingwindowratelimiter\/shouldallowrequest(for:)","title":"func shouldAllowRequest(for: any Endpoint) -> Bool","type":"method"}],"path":"\/documentation\/network\/slidingwindowratelimiter","title":"SlidingWindowRateLimiter","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/network\/timeoutmodifier\/init(timeout:)","title":"init(timeout: TimeInterval)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/network\/timeoutmodifier\/modify(_:)","title":"func modify(BuiltRequest) throws -> BuiltRequest","type":"method"}],"path":"\/documentation\/network\/timeoutmodifier","title":"TimeoutModifier","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/network\/tokenbucketratelimiter\/init(config:)","title":"init(config: RateLimitConfig)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/network\/tokenbucketratelimiter\/recordrequest(for:)","title":"func recordRequest(for: any Endpoint)","type":"method"},{"path":"\/documentation\/network\/tokenbucketratelimiter\/reset()","title":"func reset()","type":"method"},{"path":"\/documentation\/network\/tokenbucketratelimiter\/shouldallowrequest(for:)","title":"func shouldAllowRequest(for: any Endpoint) -> Bool","type":"method"}],"path":"\/documentation\/network\/tokenbucketratelimiter","title":"TokenBucketRateLimiter","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/network\/urlsessionsecuritydelegate\/init(securitymanager:)","title":"init(securityManager: any SecurityManager)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/network\/urlsessionsecuritydelegate\/urlsession(_:didreceive:completionhandler:)","title":"func urlSession(URLSession, didReceive: URLAuthenticationChallenge, completionHandler: (URLSession.AuthChallengeDisposition, URLCredential?) -> Void)","type":"method"}],"path":"\/documentation\/network\/urlsessionsecuritydelegate","title":"URLSessionSecurityDelegate","type":"class"},{"title":"Protocols","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/network\/cachemanager\/clear()","title":"func clear()","type":"method"},{"path":"\/documentation\/network\/cachemanager\/get(for:as:)","title":"func get<T>(for: String, as: T.Type) -> T?","type":"method"},{"path":"\/documentation\/network\/cachemanager\/remove(for:)","title":"func remove(for: String)","type":"method"},{"path":"\/documentation\/network\/cachemanager\/set(_:for:expiration:)","title":"func set<T>(T, for: String, expiration: TimeInterval?)","type":"method"}],"path":"\/documentation\/network\/cachemanager","title":"CacheManager","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/network\/circuitbreaker\/getstate()","title":"func getState() -> CircuitBreakerState","type":"method"},{"path":"\/documentation\/network\/circuitbreaker\/recordfailure(_:)","title":"func recordFailure(any Error)","type":"method"},{"path":"\/documentation\/network\/circuitbreaker\/recordsuccess()","title":"func recordSuccess()","type":"method"},{"path":"\/documentation\/network\/circuitbreaker\/reset()","title":"func reset()","type":"method"},{"path":"\/documentation\/network\/circuitbreaker\/shouldallowrequest()","title":"func shouldAllowRequest() -> Bool","type":"method"}],"path":"\/documentation\/network\/circuitbreaker","title":"CircuitBreaker","type":"protocol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/network\/endpoint\/baseurl","title":"var baseURL: URL","type":"property"},{"children":[{"children":[{"path":"\/documentation\/network\/endpoint\/headers-5p5aj","title":"var headers: [Http.Header]","type":"property"}],"title":"Endpoint Implementations","type":"groupMarker"}],"path":"\/documentation\/network\/endpoint\/headers","title":"var headers: [Http.Header]","type":"property"},{"path":"\/documentation\/network\/endpoint\/method","title":"var method: Http.Method","type":"property"},{"path":"\/documentation\/network\/endpoint\/path","title":"var path: String","type":"property"},{"children":[{"children":[{"path":"\/documentation\/network\/endpoint\/sampledata-6bgx5","title":"var sampleData: Data?","type":"property"}],"title":"Endpoint Implementations","type":"groupMarker"}],"path":"\/documentation\/network\/endpoint\/sampledata","title":"var sampleData: Data?","type":"property"},{"path":"\/documentation\/network\/endpoint\/task","title":"var task: Http.Task","type":"property"},{"children":[{"children":[{"path":"\/documentation\/network\/endpoint\/timeout-yc1p","title":"var timeout: TimeInterval?","type":"property"}],"title":"Endpoint Implementations","type":"groupMarker"}],"path":"\/documentation\/network\/endpoint\/timeout","title":"var timeout: TimeInterval?","type":"property"}],"path":"\/documentation\/network\/endpoint","title":"Endpoint","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/network\/networklogger\/log(_:level:)","title":"func log(String, level: LogLevel)","type":"method"}],"path":"\/documentation\/network\/networklogger","title":"NetworkLogger","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/network\/networkmetricscollector\/recordcachehit(for:)","title":"func recordCacheHit(for: String)","type":"method"},{"path":"\/documentation\/network\/networkmetricscollector\/recordcachemiss(for:)","title":"func recordCacheMiss(for: String)","type":"method"},{"path":"\/documentation\/network\/networkmetricscollector\/recordrequest(_:starttime:)","title":"func recordRequest(URLRequest, startTime: Date)","type":"method"},{"path":"\/documentation\/network\/networkmetricscollector\/recordresponse(_:endtime:error:)","title":"func recordResponse(URLResponse, endTime: Date, error: (any Error)?)","type":"method"},{"path":"\/documentation\/network\/networkmetricscollector\/recordretry(attempt:error:)","title":"func recordRetry(attempt: Int, error: any Error)","type":"method"}],"path":"\/documentation\/network\/networkmetricscollector","title":"NetworkMetricsCollector","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"children":[{"children":[{"path":"\/documentation\/network\/networkplugin\/didreceive(_:target:)-eair","title":"func didReceive(Result<(Data, URLResponse), any Error>, target: any Endpoint)","type":"method"}],"title":"NetworkPlugin Implementations","type":"groupMarker"}],"path":"\/documentation\/network\/networkplugin\/didreceive(_:target:)","title":"func didReceive(Result<(Data, URLResponse), any Error>, target: any Endpoint)","type":"method"},{"children":[{"children":[{"path":"\/documentation\/network\/networkplugin\/willsend(_:target:)-4ml0t","title":"func willSend(URLRequest, target: any Endpoint)","type":"method"}],"title":"NetworkPlugin Implementations","type":"groupMarker"}],"path":"\/documentation\/network\/networkplugin\/willsend(_:target:)","title":"func willSend(URLRequest, target: any Endpoint)","type":"method"}],"path":"\/documentation\/network\/networkplugin","title":"NetworkPlugin","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/network\/ratelimiter\/recordrequest(for:)","title":"func recordRequest(for: any Endpoint)","type":"method"},{"path":"\/documentation\/network\/ratelimiter\/reset()","title":"func reset()","type":"method"},{"path":"\/documentation\/network\/ratelimiter\/shouldallowrequest(for:)","title":"func shouldAllowRequest(for: any Endpoint) -> Bool","type":"method"}],"path":"\/documentation\/network\/ratelimiter","title":"RateLimiter","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/network\/requestbuilder\/build()","title":"func build() throws -> BuiltRequest","type":"method"}],"path":"\/documentation\/network\/requestbuilder","title":"RequestBuilder","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/network\/requestmodifier\/modify(_:)","title":"func modify(BuiltRequest) throws -> BuiltRequest","type":"method"}],"path":"\/documentation\/network\/requestmodifier","title":"RequestModifier","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/network\/responsehandler\/handle(_:response:as:)","title":"func handle<T>(Data, response: URLResponse, as: T.Type) throws -> T","type":"method"}],"path":"\/documentation\/network\/responsehandler","title":"ResponseHandler","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/network\/retrypolicy\/delay(for:)","title":"func delay(for: Int) -> TimeInterval","type":"method"},{"path":"\/documentation\/network\/retrypolicy\/maxattempts()","title":"func maxAttempts() -> Int","type":"method"},{"path":"\/documentation\/network\/retrypolicy\/shouldretry(for:attempt:request:)","title":"func shouldRetry(for: any Error, attempt: Int, request: URLRequest) -> Bool","type":"method"}],"path":"\/documentation\/network\/retrypolicy","title":"RetryPolicy","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/network\/securitymanager\/addcertificatepinning(_:for:)","title":"func addCertificatePinning(SecCertificate, for: String)","type":"method"},{"path":"\/documentation\/network\/securitymanager\/iscertificatepinned(for:)","title":"func isCertificatePinned(for: String) -> Bool","type":"method"},{"path":"\/documentation\/network\/securitymanager\/removecertificatepinning(for:)","title":"func removeCertificatePinning(for: String)","type":"method"},{"path":"\/documentation\/network\/securitymanager\/validatecertificate(_:domain:)","title":"func validateCertificate(SecTrust, domain: String) -> Bool","type":"method"}],"path":"\/documentation\/network\/securitymanager","title":"SecurityManager","type":"protocol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/network\/session\/perform(_:)","title":"func perform(URLRequest) async throws -> (Data, URLResponse)","type":"method"}],"path":"\/documentation\/network\/session","title":"Session","type":"protocol"},{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/network\/anyencodable\/init(_:)","title":"init(any Encodable)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/network\/anyencodable\/encode(to:)","title":"func encode(to: any Encoder) throws","type":"method"}],"path":"\/documentation\/network\/anyencodable","title":"AnyEncodable","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/network\/builtrequest\/init(urlrequest:downloaddestination:)","title":"init(urlRequest: URLRequest, downloadDestination: DownloadDestination?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/network\/builtrequest\/downloaddestination","title":"let downloadDestination: DownloadDestination?","type":"property"},{"path":"\/documentation\/network\/builtrequest\/urlrequest","title":"let urlRequest: URLRequest","type":"property"}],"path":"\/documentation\/network\/builtrequest","title":"BuiltRequest","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/network\/circuitbreakerconfig\/init(failurethreshold:recoverytimeout:expectedfailurerate:minimumrequestcount:)","title":"init(failureThreshold: Int, recoveryTimeout: TimeInterval, expectedFailureRate: Double, minimumRequestCount: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/network\/circuitbreakerconfig\/expectedfailurerate","title":"let expectedFailureRate: Double","type":"property"},{"path":"\/documentation\/network\/circuitbreakerconfig\/failurethreshold","title":"let failureThreshold: Int","type":"property"},{"path":"\/documentation\/network\/circuitbreakerconfig\/minimumrequestcount","title":"let minimumRequestCount: Int","type":"property"},{"path":"\/documentation\/network\/circuitbreakerconfig\/recoverytimeout","title":"let recoveryTimeout: TimeInterval","type":"property"}],"path":"\/documentation\/network\/circuitbreakerconfig","title":"CircuitBreakerConfig","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/network\/customretrypolicy\/init(maxattempts:shouldretry:delay:)","title":"init(maxAttempts: Int, shouldRetry: (any Error, Int, URLRequest) -> Bool, delay: (Int) -> TimeInterval)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/network\/customretrypolicy\/delay(for:)","title":"func delay(for: Int) -> TimeInterval","type":"method"},{"path":"\/documentation\/network\/customretrypolicy\/maxattempts()","title":"func maxAttempts() -> Int","type":"method"},{"path":"\/documentation\/network\/customretrypolicy\/shouldretry(for:attempt:request:)","title":"func shouldRetry(for: any Error, attempt: Int, request: URLRequest) -> Bool","type":"method"}],"path":"\/documentation\/network\/customretrypolicy","title":"CustomRetryPolicy","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/network\/defaultresponsehandler\/init(decoder:)","title":"init(decoder: JSONDecoder)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/network\/defaultresponsehandler\/handle(_:response:as:)","title":"func handle<T>(Data, response: URLResponse, as: T.Type) throws -> T","type":"method"}],"path":"\/documentation\/network\/defaultresponsehandler","title":"DefaultResponseHandler","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/network\/exponentialbackoffretrypolicy\/init(maxattempts:basedelay:maxdelay:multiplier:retryableerrors:)","title":"init(maxAttempts: Int, baseDelay: TimeInterval, maxDelay: TimeInterval, multiplier: Double, retryableErrors: Set<URLError.Code>)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/network\/exponentialbackoffretrypolicy\/delay(for:)","title":"func delay(for: Int) -> TimeInterval","type":"method"},{"path":"\/documentation\/network\/exponentialbackoffretrypolicy\/maxattempts()","title":"func maxAttempts() -> Int","type":"method"},{"path":"\/documentation\/network\/exponentialbackoffretrypolicy\/shouldretry(for:attempt:request:)","title":"func shouldRetry(for: any Error, attempt: Int, request: URLRequest) -> Bool","type":"method"}],"path":"\/documentation\/network\/exponentialbackoffretrypolicy","title":"ExponentialBackoffRetryPolicy","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/network\/fixeddelayretrypolicy\/init(maxattempts:delay:retryableerrors:)","title":"init(maxAttempts: Int, delay: TimeInterval, retryableErrors: Set<URLError.Code>)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/network\/fixeddelayretrypolicy\/delay(for:)","title":"func delay(for: Int) -> TimeInterval","type":"method"},{"path":"\/documentation\/network\/fixeddelayretrypolicy\/maxattempts()","title":"func maxAttempts() -> Int","type":"method"},{"path":"\/documentation\/network\/fixeddelayretrypolicy\/shouldretry(for:attempt:request:)","title":"func shouldRetry(for: any Error, attempt: Int, request: URLRequest) -> Bool","type":"method"}],"path":"\/documentation\/network\/fixeddelayretrypolicy","title":"FixedDelayRetryPolicy","type":"struct"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/network\/http\/header\/init(field:value:)","title":"init(field: String, value: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/network\/http\/header\/field","title":"let field: String","type":"property"},{"path":"\/documentation\/network\/http\/header\/value","title":"let value: String","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/network\/http\/header\/formurlencoded","title":"static var formURLEncoded: Http.Header","type":"property"},{"path":"\/documentation\/network\/http\/header\/json","title":"static var json: Http.Header","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/network\/http\/header\/accept(_:)","title":"static func accept(String) -> Http.Header","type":"method"},{"path":"\/documentation\/network\/http\/header\/authorization(_:)","title":"static func authorization(String) -> Http.Header","type":"method"},{"path":"\/documentation\/network\/http\/header\/contenttype(_:)","title":"static func contentType(String) -> Http.Header","type":"method"},{"path":"\/documentation\/network\/http\/header\/useragent(_:)","title":"static func userAgent(String) -> Http.Header","type":"method"}],"path":"\/documentation\/network\/http\/header","title":"Http.Header","type":"struct"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/network\/http\/method\/delete","title":"case delete","type":"case"},{"path":"\/documentation\/network\/http\/method\/get","title":"case get","type":"case"},{"path":"\/documentation\/network\/http\/method\/head","title":"case head","type":"case"},{"path":"\/documentation\/network\/http\/method\/options","title":"case options","type":"case"},{"path":"\/documentation\/network\/http\/method\/patch","title":"case patch","type":"case"},{"path":"\/documentation\/network\/http\/method\/post","title":"case post","type":"case"},{"path":"\/documentation\/network\/http\/method\/put","title":"case put","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/network\/http\/method\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/network\/http\/method\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/network\/http\/method\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/network\/http\/method\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/network\/http\/method\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/network\/http\/method\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/network\/http\/method","title":"Http.Method","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/network\/http\/task\/download(destination:)","title":"case download(destination: DownloadDestination)","type":"case"},{"path":"\/documentation\/network\/http\/task\/requestcustom(body:contenttype:)","title":"case requestCustom(body: Data?, contentType: String?)","type":"case"},{"path":"\/documentation\/network\/http\/task\/requestjson(_:)","title":"case requestJSON(any Encodable)","type":"case"},{"path":"\/documentation\/network\/http\/task\/requestparameters(_:encoding:)","title":"case requestParameters([String : Any], encoding: ParameterEncoding)","type":"case"},{"path":"\/documentation\/network\/http\/task\/requestplain","title":"case requestPlain","type":"case"},{"path":"\/documentation\/network\/http\/task\/requeststream(_:length:contenttype:)","title":"case requestStream(InputStream, length: Int, contentType: String?)","type":"case"},{"path":"\/documentation\/network\/http\/task\/uploadmultipart(_:)","title":"case uploadMultipart([MultipartFormData])","type":"case"}],"path":"\/documentation\/network\/http\/task","title":"Http.Task","type":"enum"}],"path":"\/documentation\/network\/http","title":"Http","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/network\/multipartformdata\/init(name:filename:mimetype:data:)","title":"init(name: String, fileName: String?, mimeType: String?, data: Data)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/network\/multipartformdata\/data","title":"let data: Data","type":"property"},{"path":"\/documentation\/network\/multipartformdata\/filename","title":"let fileName: String?","type":"property"},{"path":"\/documentation\/network\/multipartformdata\/mimetype","title":"let mimeType: String?","type":"property"},{"path":"\/documentation\/network\/multipartformdata\/name","title":"let name: String","type":"property"}],"path":"\/documentation\/network\/multipartformdata","title":"MultipartFormData","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/network\/networkmetrics\/init(requestcount:successcount:failurecount:averageresponsetime:totalbytestransferred:cachehitrate:retrycount:errordistribution:)","title":"init(requestCount: Int, successCount: Int, failureCount: Int, averageResponseTime: TimeInterval, totalBytesTransferred: Int64, cacheHitRate: Double, retryCount: Int, errorDistribution: [String : Int])","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/network\/networkmetrics\/averageresponsetime","title":"let averageResponseTime: TimeInterval","type":"property"},{"path":"\/documentation\/network\/networkmetrics\/cachehitrate","title":"let cacheHitRate: Double","type":"property"},{"path":"\/documentation\/network\/networkmetrics\/errordistribution","title":"let errorDistribution: [String : Int]","type":"property"},{"path":"\/documentation\/network\/networkmetrics\/failurecount","title":"let failureCount: Int","type":"property"},{"path":"\/documentation\/network\/networkmetrics\/requestcount","title":"let requestCount: Int","type":"property"},{"path":"\/documentation\/network\/networkmetrics\/retrycount","title":"let retryCount: Int","type":"property"},{"path":"\/documentation\/network\/networkmetrics\/successcount","title":"let successCount: Int","type":"property"},{"path":"\/documentation\/network\/networkmetrics\/totalbytestransferred","title":"let totalBytesTransferred: Int64","type":"property"}],"path":"\/documentation\/network\/networkmetrics","title":"NetworkMetrics","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/network\/ratelimitconfig\/init(maxrequests:timewindow:burstsize:)","title":"init(maxRequests: Int, timeWindow: TimeInterval, burstSize: Int?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/network\/ratelimitconfig\/burstsize","title":"let burstSize: Int","type":"property"},{"path":"\/documentation\/network\/ratelimitconfig\/maxrequests","title":"let maxRequests: Int","type":"property"},{"path":"\/documentation\/network\/ratelimitconfig\/timewindow","title":"let timeWindow: TimeInterval","type":"property"}],"path":"\/documentation\/network\/ratelimitconfig","title":"RateLimitConfig","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/network\/stubsession\/init(_:statuscode:url:)","title":"init(Data, statusCode: Int, url: URL)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/network\/stubsession\/perform(_:)","title":"func perform(URLRequest) async throws -> (Data, URLResponse)","type":"method"}],"path":"\/documentation\/network\/stubsession","title":"StubSession","type":"struct"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/network\/circuitbreakerstate\/closed","title":"case closed","type":"case"},{"path":"\/documentation\/network\/circuitbreakerstate\/halfopen","title":"case halfOpen","type":"case"},{"path":"\/documentation\/network\/circuitbreakerstate\/open","title":"case open","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/network\/circuitbreakerstate\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/network\/circuitbreakerstate\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/network\/circuitbreakerstate","title":"CircuitBreakerState","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/network\/downloaddestination\/caches(filename:)","title":"case caches(fileName: String)","type":"case"},{"path":"\/documentation\/network\/downloaddestination\/custom(_:)","title":"case custom((URL, URLResponse) -> URL)","type":"case"},{"path":"\/documentation\/network\/downloaddestination\/documents(filename:)","title":"case documents(fileName: String)","type":"case"}],"path":"\/documentation\/network\/downloaddestination","title":"DownloadDestination","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/network\/loglevel\/debug","title":"case debug","type":"case"},{"path":"\/documentation\/network\/loglevel\/error","title":"case error","type":"case"},{"path":"\/documentation\/network\/loglevel\/info","title":"case info","type":"case"},{"path":"\/documentation\/network\/loglevel\/warning","title":"case warning","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/network\/loglevel\/init(rawvalue:)","title":"init?(rawValue: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/network\/loglevel\/emoji","title":"var emoji: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/network\/loglevel\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/network\/loglevel\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/network\/loglevel\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/network\/loglevel\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/network\/loglevel\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/network\/loglevel","title":"LogLevel","type":"enum"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/network\/networkerror\/==(_:_:)","title":"static func == (NetworkError, NetworkError) -> Bool","type":"op"},{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/network\/networkerror\/cachingerror(_:)","title":"case cachingError(any Error)","type":"case"},{"path":"\/documentation\/network\/networkerror\/circuitbreakeropen","title":"case circuitBreakerOpen","type":"case"},{"path":"\/documentation\/network\/networkerror\/decodingerror(_:)","title":"case decodingError(any Error)","type":"case"},{"path":"\/documentation\/network\/networkerror\/encodingerror(_:)","title":"case encodingError(any Error)","type":"case"},{"path":"\/documentation\/network\/networkerror\/invalidrequest","title":"case invalidRequest","type":"case"},{"path":"\/documentation\/network\/networkerror\/ratelimitexceeded","title":"case rateLimitExceeded","type":"case"},{"path":"\/documentation\/network\/networkerror\/requestfailed(_:)","title":"case requestFailed(URLError)","type":"case"},{"path":"\/documentation\/network\/networkerror\/servererror(statuscode:data:)","title":"case serverError(statusCode: Int, data: Data)","type":"case"},{"path":"\/documentation\/network\/networkerror\/unknown","title":"case unknown","type":"case"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/network\/networkerror\/errordescription","title":"var errorDescription: String?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/network\/networkerror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/network\/networkerror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/network\/networkerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/network\/networkerror\/error-implementations","title":"Error Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/network\/networkerror\/failurereason","title":"var failureReason: String?","type":"property"},{"path":"\/documentation\/network\/networkerror\/helpanchor","title":"var helpAnchor: String?","type":"property"},{"path":"\/documentation\/network\/networkerror\/recoverysuggestion","title":"var recoverySuggestion: String?","type":"property"}],"path":"\/documentation\/network\/networkerror\/localizederror-implementations","title":"LocalizedError Implementations","type":"symbol"}],"path":"\/documentation\/network\/networkerror","title":"NetworkError","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/network\/parameterencoding\/formurlencoded","title":"case formURLEncoded","type":"case"},{"path":"\/documentation\/network\/parameterencoding\/json","title":"case json","type":"case"},{"path":"\/documentation\/network\/parameterencoding\/url","title":"case url","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/network\/parameterencoding\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/network\/parameterencoding\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/network\/parameterencoding","title":"ParameterEncoding","type":"enum"},{"title":"Extended Modules","type":"groupMarker"},{"children":[{"title":"Extended Classes","type":"groupMarker"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/network\/foundation\/urlsession\/perform(_:)","title":"func perform(URLRequest) async throws -> (Data, URLResponse)","type":"method"}],"path":"\/documentation\/network\/foundation\/urlsession\/session-implementations","title":"Session Implementations","type":"symbol"}],"path":"\/documentation\/network\/foundation\/urlsession","title":"URLSession","type":"extension"}],"path":"\/documentation\/network\/foundation","title":"Foundation","type":"extension"}],"path":"\/documentation\/network","title":"Network","type":"module"}]},"schemaVersion":{"major":0,"minor":1,"patch":2}}