{"relationshipsSections":[{"title":"Conforming Types","identifiers":["doc:\/\/Network\/documentation\/Network\/DefaultCircuitBreaker","doc:\/\/Network\/documentation\/Network\/EndpointCircuitBreaker"],"kind":"relationships","type":"conformingTypes"}],"schemaVersion":{"patch":0,"minor":3,"major":0},"metadata":{"role":"symbol","externalID":"s:7Network14CircuitBreakerP","symbolKind":"protocol","modules":[{"name":"Network"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CircuitBreaker","kind":"identifier"}],"roleHeading":"Protocol","title":"CircuitBreaker","navigatorTitle":[{"text":"CircuitBreaker","kind":"identifier"}]},"kind":"symbol","variants":[{"paths":["\/documentation\/network\/circuitbreaker"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Network\/documentation\/Network\/CircuitBreaker"},"abstract":[{"text":"A protocol for implementing circuit breaker pattern.","type":"text"}],"hierarchy":{"paths":[["doc:\/\/Network\/documentation\/Network"]]},"topicSections":[{"title":"Instance Methods","identifiers":["doc:\/\/Network\/documentation\/Network\/CircuitBreaker\/getState()","doc:\/\/Network\/documentation\/Network\/CircuitBreaker\/recordFailure(_:)","doc:\/\/Network\/documentation\/Network\/CircuitBreaker\/recordSuccess()","doc:\/\/Network\/documentation\/Network\/CircuitBreaker\/reset()","doc:\/\/Network\/documentation\/Network\/CircuitBreaker\/shouldAllowRequest()"],"anchor":"Instance-Methods","generated":true}],"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CircuitBreaker","kind":"identifier"}]}]},{"content":[{"text":"Overview","type":"heading","anchor":"overview","level":2},{"inlineContent":[{"type":"text","text":"Circuit breaker provides fault tolerance by temporarily stopping requests"},{"type":"text","text":" "},{"type":"text","text":"when failures exceed a threshold. This prevents cascading failures and"},{"type":"text","text":" "},{"type":"text","text":"allows the system to recover gracefully."}],"type":"paragraph"},{"level":2,"type":"heading","anchor":"Circuit-Breaker-States","text":"Circuit Breaker States"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"inlineContent":[{"text":"Closed","type":"text"}],"type":"strong"},{"type":"text","text":": Normal operation, requests are allowed"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"text":"Open","type":"text"}]},{"type":"text","text":": Failure threshold reached, requests are blocked"}]}]},{"content":[{"inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"Half-Open"}]},{"type":"text","text":": Testing recovery, limited requests are allowed"}],"type":"paragraph"}]}]},{"level":2,"type":"heading","anchor":"Usage","text":"Usage"},{"type":"codeListing","syntax":"swift","code":["let circuitBreaker = DefaultCircuitBreaker(","    config: CircuitBreakerConfig(","        failureThreshold: 5,","        recoveryTimeout: 30","    )",")","","if circuitBreaker.shouldAllowRequest() {","    \/\/ Make the request","} else {","    \/\/ Handle circuit breaker open","}"]}],"kind":"content"}],"references":{"doc://Network/documentation/Network/CircuitBreaker/recordFailure(_:)":{"url":"\/documentation\/network\/circuitbreaker\/recordfailure(_:)","abstract":[{"type":"text","text":"Records a failed request."}],"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"recordFailure","kind":"identifier"},{"text":"(any ","kind":"text"},{"text":"Error","preciseIdentifier":"s:s5ErrorP","kind":"typeIdentifier"},{"text":")","kind":"text"}],"title":"recordFailure(_:)","required":true,"kind":"symbol","type":"topic","identifier":"doc:\/\/Network\/documentation\/Network\/CircuitBreaker\/recordFailure(_:)"},"doc://Network/documentation/Network/CircuitBreaker/recordSuccess()":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"recordSuccess"},{"kind":"text","text":"()"}],"abstract":[{"text":"Records a successful request.","type":"text"}],"required":true,"url":"\/documentation\/network\/circuitbreaker\/recordsuccess()","identifier":"doc:\/\/Network\/documentation\/Network\/CircuitBreaker\/recordSuccess()","kind":"symbol","role":"symbol","type":"topic","title":"recordSuccess()"},"doc://Network/documentation/Network/CircuitBreaker/getState()":{"required":true,"type":"topic","title":"getState()","identifier":"doc:\/\/Network\/documentation\/Network\/CircuitBreaker\/getState()","kind":"symbol","url":"\/documentation\/network\/circuitbreaker\/getstate()","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"getState","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"CircuitBreakerState","kind":"typeIdentifier","preciseIdentifier":"s:7Network19CircuitBreakerStateO"}],"abstract":[{"type":"text","text":"Returns the current state of the circuit breaker."}]},"doc://Network/documentation/Network/CircuitBreaker":{"url":"\/documentation\/network\/circuitbreaker","kind":"symbol","title":"CircuitBreaker","type":"topic","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"CircuitBreaker"}],"abstract":[{"type":"text","text":"A protocol for implementing circuit breaker pattern."}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"CircuitBreaker"}],"identifier":"doc:\/\/Network\/documentation\/Network\/CircuitBreaker"},"doc://Network/documentation/Network/EndpointCircuitBreaker":{"identifier":"doc:\/\/Network\/documentation\/Network\/EndpointCircuitBreaker","title":"EndpointCircuitBreaker","abstract":[],"url":"\/documentation\/network\/endpointcircuitbreaker","type":"topic","role":"symbol","navigatorTitle":[{"text":"EndpointCircuitBreaker","kind":"identifier"}],"kind":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"EndpointCircuitBreaker","kind":"identifier"}]},"doc://Network/documentation/Network/DefaultCircuitBreaker":{"kind":"symbol","abstract":[],"role":"symbol","title":"DefaultCircuitBreaker","navigatorTitle":[{"kind":"identifier","text":"DefaultCircuitBreaker"}],"url":"\/documentation\/network\/defaultcircuitbreaker","type":"topic","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"DefaultCircuitBreaker"}],"identifier":"doc:\/\/Network\/documentation\/Network\/DefaultCircuitBreaker"},"doc://Network/documentation/Network":{"type":"topic","title":"Network","identifier":"doc:\/\/Network\/documentation\/Network","abstract":[],"kind":"symbol","url":"\/documentation\/network","role":"collection"},"doc://Network/documentation/Network/CircuitBreaker/reset()":{"abstract":[{"type":"text","text":"Manually resets the circuit breaker to closed state."}],"required":true,"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"reset","kind":"identifier"},{"text":"()","kind":"text"}],"title":"reset()","type":"topic","kind":"symbol","url":"\/documentation\/network\/circuitbreaker\/reset()","identifier":"doc:\/\/Network\/documentation\/Network\/CircuitBreaker\/reset()","role":"symbol"},"doc://Network/documentation/Network/CircuitBreaker/shouldAllowRequest()":{"role":"symbol","abstract":[{"text":"Determines if a request should be allowed to proceed.","type":"text"}],"identifier":"doc:\/\/Network\/documentation\/Network\/CircuitBreaker\/shouldAllowRequest()","type":"topic","title":"shouldAllowRequest()","required":true,"url":"\/documentation\/network\/circuitbreaker\/shouldallowrequest()","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"shouldAllowRequest"},{"kind":"text","text":"() -> "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"}]}}}