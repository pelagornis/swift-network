{"kind":"symbol","sections":[],"abstract":[{"text":"A type-erased wrapper for Encodable types.","type":"text"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/Network\/documentation\/Network\/AnyEncodable"},"schemaVersion":{"minor":3,"patch":0,"major":0},"metadata":{"navigatorTitle":[{"text":"AnyEncodable","kind":"identifier"}],"modules":[{"name":"Network"}],"role":"symbol","symbolKind":"struct","externalID":"s:7Network12AnyEncodableV","roleHeading":"Structure","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AnyEncodable","kind":"identifier"}],"title":"AnyEncodable"},"topicSections":[{"anchor":"Initializers","identifiers":["doc:\/\/Network\/documentation\/Network\/AnyEncodable\/init(_:)"],"generated":true,"title":"Initializers"},{"anchor":"Instance-Methods","identifiers":["doc:\/\/Network\/documentation\/Network\/AnyEncodable\/encode(to:)"],"generated":true,"title":"Instance Methods"}],"relationshipsSections":[{"identifiers":["doc:\/\/Network\/SE"],"title":"Conforms To","kind":"relationships","type":"conformsTo"}],"primaryContentSections":[{"declarations":[{"tokens":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AnyEncodable","kind":"identifier"}],"languages":["swift"],"platforms":["macOS"]}],"kind":"declarations"},{"kind":"content","content":[{"level":2,"text":"Overview","type":"heading","anchor":"overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"AnyEncodable allows you to store and encode any Encodable value without"},{"type":"text","text":" "},{"type":"text","text":"knowing its specific type at compile time. This is useful when you need"},{"type":"text","text":" "},{"type":"text","text":"to work with heterogeneous collections of encodable objects."}]},{"level":2,"text":"Usage","type":"heading","anchor":"Usage"},{"syntax":"swift","type":"codeListing","code":["let encodables: [AnyEncodable] = [","    AnyEncodable(\"string\"),","    AnyEncodable(42),","    AnyEncodable(User(name: \"John\"))","]","","let data = try JSONEncoder().encode(encodables)"]}]}],"hierarchy":{"paths":[["doc:\/\/Network\/documentation\/Network"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/network\/anyencodable"]}],"references":{"doc://Network/documentation/Network/AnyEncodable/encode(to:)":{"type":"topic","title":"encode(to:)","role":"symbol","kind":"symbol","identifier":"doc:\/\/Network\/documentation\/Network\/AnyEncodable\/encode(to:)","url":"\/documentation\/network\/anyencodable\/encode(to:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"encode","kind":"identifier"},{"text":"(","kind":"text"},{"text":"to","kind":"externalParam"},{"text":": any ","kind":"text"},{"text":"Encoder","kind":"typeIdentifier","preciseIdentifier":"s:s7EncoderP"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"}],"abstract":[{"text":"Encodes the wrapped value using the provided encoder.","type":"text"}]},"doc://Network/documentation/Network":{"url":"\/documentation\/network","type":"topic","kind":"symbol","role":"collection","identifier":"doc:\/\/Network\/documentation\/Network","abstract":[],"title":"Network"},"doc://Network/documentation/Network/AnyEncodable/init(_:)":{"title":"init(_:)","url":"\/documentation\/network\/anyencodable\/init(_:)","type":"topic","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"(any "},{"kind":"typeIdentifier","preciseIdentifier":"s:SE","text":"Encodable"},{"kind":"text","text":")"}],"identifier":"doc:\/\/Network\/documentation\/Network\/AnyEncodable\/init(_:)","role":"symbol","abstract":[{"text":"Creates a new AnyEncodable wrapper.","type":"text"}],"kind":"symbol"},"doc://Network/SE":{"identifier":"doc:\/\/Network\/SE","type":"unresolvable","title":"Swift.Encodable"},"doc://Network/documentation/Network/AnyEncodable":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AnyEncodable"}],"identifier":"doc:\/\/Network\/documentation\/Network\/AnyEncodable","kind":"symbol","title":"AnyEncodable","abstract":[{"type":"text","text":"A type-erased wrapper for Encodable types."}],"type":"topic","url":"\/documentation\/network\/anyencodable","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"AnyEncodable"}]}}}